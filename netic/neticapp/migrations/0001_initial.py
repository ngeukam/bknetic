# Generated by Django 5.0.3 on 2024-03-18 10:42

import django.db.models.deletion
import django.utils.timezone
import neticapp.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Full name')),
                ('lat', models.CharField(blank=True, max_length=50, null=True)),
                ('long', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', neticapp.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_status', models.BooleanField(default=True)),
                ('accepted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('reference', models.CharField(blank=True, editable=False, max_length=8, null=True, unique=True)),
                ('product', models.IntegerField(blank=True, choices=[(1, 'Bouteilles de gaz'), (2, 'Documents'), (3, 'Nourriture'), (4, 'Personnes'), (5, 'Cartons'), (6, 'Sacs de produits'), (7, 'Aliments frais'), (8, 'Vêtements'), (9, 'Médicaments'), (10, 'Prélèvements')], null=True)),
                ('vehicule', models.IntegerField(blank=True, choices=[(1, 'Taxi'), (2, 'Moto'), (3, 'Camion'), (4, 'Perso'), (5, 'Tricycle'), (6, 'Avion')], null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('budget', models.FloatField(blank=True, null=True)),
                ('departure_place', models.CharField(blank=True, max_length=100, null=True)),
                ('arrival_place', models.CharField(blank=True, max_length=100, null=True)),
                ('lat_departure_place', models.CharField(blank=True, max_length=100, null=True)),
                ('long_departure_place', models.CharField(blank=True, max_length=100, null=True)),
                ('lat_arrival_place', models.CharField(blank=True, max_length=100, null=True)),
                ('long_arrival_place', models.CharField(blank=True, max_length=100, null=True)),
                ('departure_town_place', models.CharField(blank=True, max_length=100, null=True)),
                ('arrival_town_place', models.CharField(blank=True, max_length=100, null=True)),
                ('devise', models.IntegerField(choices=[(1, 'xaf'), (2, '€'), (3, '$')], default=1)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted', models.ManyToManyField(through='neticapp.Jobs', to=settings.AUTH_USER_MODEL)),
                ('order_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_user', to=settings.AUTH_USER_MODEL, verbose_name='Order of user')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.AddField(
            model_name='jobs',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='neticapp.order'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_amount', models.FloatField(blank=True, null=True)),
                ('remaining_amount', models.FloatField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'NotPaid'), (2, 'Partial'), (2, 'Paid')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_invoice', to='neticapp.invoice')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
    ]
